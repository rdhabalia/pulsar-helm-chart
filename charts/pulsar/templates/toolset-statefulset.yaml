#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.components.toolset }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.toolset.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
  replicas: {{ .Values.toolset.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.toolset.component }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.toolset.component }}
      annotations:
        {{- if .Values.toolset.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/toolset-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.toolset.alwaysRestart }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
{{- with .Values.toolset.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      securityContext:
{{ toYaml .Values.pod.securityContext | indent 8 }}
    {{- if .Values.toolset.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.toolset.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.toolset.tolerations }}
      tolerations:
{{ toYaml .Values.toolset.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.toolset.gracePeriod }}
      serviceAccountName: "{{ .Values.toolset.service_account.name }}"
      initContainers:
      {{- include "pulsar.init-sia" . | nindent 6 }}
      {{$data := dict "service_account" .Values.toolset.service_account.name }}
      {{- include "pulsar.init-cameo" (merge (dict "Args" $data) . ) | nindent 6 }}
      ## initialize jks cert generation for toolset zk client usage
      - name: init-zkcertgen
        image: "{{ .Values.images.broker.repository }}:{{ .Values.images.broker.tag }}"
        imagePullPolicy: {{ .Values.images.broker.pullPolicy }}
        securityContext:
{{ toYaml .Values.container.securityContext | indent 10 }}
        env:
          - name: ATHENZ_SERVICE_CERT_PATH
            value: {{ .Values.athenz.certs.path }}/{{ .Values.athenz.domain }}.{{ .Values.toolset.service_account.name }}.cert.pem
          - name: ATHENZ_SERVICE_KEY_PATH
            value: {{ .Values.athenz.certs.key }}/{{ .Values.athenz.domain }}.{{ .Values.toolset.service_account.name }}.key.pem
        command: ["sh", "-c"]
        args:
          - >
            echo "jks cert script started";
            bin/jks-cert-generator.sh {{ .Values.athenz.domain }}.{{ .Values.toolset.service_account.name }}.key.pem {{ .Values.athenz.domain }}.{{ .Values.toolset.service_account.name }}.cert.pem;
            echo "zookeeper configurations";
            cat conf/zookeeper.conf;
        volumeMounts:
{{ toYaml .Values.athenz.volumeMounts | indent 10 }}
      containers:
      {{- include "pulsar.sia" . | nindent 6 }}
      {{$data := dict "service_account" .Values.toolset.service_account.name }}
      {{- include "pulsar.cameo" (merge (dict "Args" $data) . ) | nindent 6 }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
        image: "{{ .Values.images.broker.repository }}:{{ .Values.images.broker.tag }}"
        imagePullPolicy: {{ .Values.images.broker.pullPolicy }}
        securityContext:
{{ toYaml .Values.container.securityContext | indent 10 }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      {{- if .Values.toolset.resources }}
        resources:
{{ toYaml .Values.toolset.resources | indent 10 }}
      {{- end }}
        command: ["sh", "-c"]
        args:
        - >
        {{- if .Values.toolset.additionalCommand }}
          {{ .Values.toolset.additionalCommand }}
        {{- end }}
          bin/apply-config-from-env.py conf/client.conf;
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          {{ if .Values.toolset.zktls.enabled }}
          echo "setting up jks cert gen script as cron with key " {{ .Values.athenz.domain }}.{{ .Values.toolset.service_account.name }}.key.pem;
          (crontab -l; echo "2 1 * * *" /pulsar/bin/jks-cert-generator.sh {{ .Values.athenz.domain }}.{{ .Values.toolset.service_account.name }}.key.pem  {{ .Values.athenz.domain }}.{{ .Values.toolset.service_account.name }}.cert.pem) | sort -u | crontab -;
          {{ end }}
          {{- include "pulsar.toolset.zookeeper.tls.settings" . | nindent 10 }}
          sleep 10000000000
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
        volumeMounts:
{{ toYaml .Values.athenz.volumeMounts | indent 8 }}
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}-{{ .Values.toolset.volumes.logs.name }}"
          mountPath: {{ .Values.toolset.volumes.logs.mountPath }}
          subPathExpr: $(POD_NAME)
      {{- if .Values.toolset.extraVolumeMounts }}
{{ toYaml .Values.toolset.extraVolumeMounts | indent 8 }}
      {{- end }}
      {{- include "pulsar.toolset.certs.volumeMounts" . | nindent 8 }}
      volumes:
      {{$data := dict "service_account_configmap" .Values.toolset.service_account.configmap }}
      {{- include "pulsar.sia-volumes" (merge (dict "Args" $data) . ) | nindent 6 }}
      {{ if not .Values.toolset.volumes.logs2ebs }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}-{{ .Values.toolset.volumes.logs.name }}"
        hostPath:
          path: {{ .Values.toolset.volumes.logs.mountPath }}
          type: {{ .Values.toolset.volumes.logs.type }}
      {{ end }}
      {{- if .Values.toolset.extraVolumes }}
{{ toYaml .Values.toolset.extraVolumes | indent 6 }}
      {{- end }}
      {{- include "pulsar.imagePullSecrets" . | nindent 6}}
{{- end }}

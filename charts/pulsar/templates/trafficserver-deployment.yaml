#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.components.trafficserver }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.trafficserver.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.trafficserver.component }}
spec:
  replicas: {{ .Values.trafficserver.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.trafficserver.component }}
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.trafficserver.component }}
      annotations:
        {{- if .Values.trafficserver.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/trafficserver-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.trafficserver.alwaysRestart }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
{{- with .Values.trafficserver.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      securityContext:
{{ toYaml .Values.pod.securityContext | indent 8 }}
    {{- if .Values.trafficserver.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.trafficserver.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.trafficserver.tolerations }}
      tolerations:
{{ toYaml .Values.trafficserver.tolerations | indent 8 }}
    {{- end }}
      topologySpreadConstraints:
        {{- if and .Values.affinity.zone_spread .Values.trafficserver.affinity.zone_spread}}
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchExpressions:
            - key: "app"
              operator: In
              values:
              - "{{ template "pulsar.name" . }}"
            - key: "release"
              operator: In
              values:
              - {{ .Release.Name }}
            - key: "component"
              operator: In
              values:
              - {{ .Values.trafficserver.component }}
        {{- end }}
      serviceAccountName: "{{ .Values.trafficserver.service_account.name }}"
      initContainers:
      ## sia init container
      {{- include "pulsar.init-sia" . | nindent 6 }}
      {{$data := dict "service_account" .Values.trafficserver.service_account.name }}
      {{- include "pulsar.init-cameo" (merge (dict "Args" $data) . ) | nindent 6 }}
      containers:
      {{- include "pulsar.sia" . | nindent 6 }}
      {{$data := dict "service_account" .Values.trafficserver.service_account.name }}
      {{- include "pulsar.cameo" (merge (dict "Args" $data) . ) | nindent 6 }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.trafficserver.component }}"
        image: "{{ .Values.images.trafficserver.repository }}:{{ .Values.images.trafficserver.tag }}"
        imagePullPolicy: {{ .Values.images.trafficserver.pullPolicy }}
        command: ["/scripts/wrapper.sh"]
        securityContext:
{{ toYaml .Values.trafficserver.container.securityContext | indent 10 }}
      {{- if .Values.trafficserver.resources }}
        resources:
{{ toYaml .Values.trafficserver.resources | indent 10 }}
      {{- end }}
        volumeMounts:
{{ toYaml .Values.athenz.volumeMounts | indent 10 }}
          - mountPath: /scripts
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.trafficserver.component }}"
      volumes:
      {{$data := dict "service_account_configmap" .Values.trafficserver.service_account.configmap }}
      {{- include "pulsar.sia-volumes" (merge (dict "Args" $data) . ) | nindent 6 }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.trafficserver.component }}"
        configMap:
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.trafficserver.component }}"
          defaultMode: 0744
{{- end }}
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# add athenz n cameo changes

{{- if .Values.components.bookkeeper }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.bookkeeper.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
  replicas: {{ .Values.bookkeeper.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.bookkeeper.component }}
  updateStrategy:
{{ toYaml .Values.bookkeeper.updateStrategy | indent 4 }}
  podManagementPolicy: {{ .Values.bookkeeper.podManagementPolicy }}
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.bookkeeper.component }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.bookkeeper.ports.http }}"
        {{- if .Values.bookkeeper.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/bookkeeper-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.bookkeeper.alwaysRestart }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
{{- with .Values.bookkeeper.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.bookkeeper.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.bookkeeper.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.bookkeeper.tolerations }}
      tolerations:
{{ toYaml .Values.bookkeeper.tolerations | indent 8 }}
    {{- end }}
      topologySpreadConstraints:
        {{- if and .Values.affinity.zone_spread .Values.bookkeeper.affinity.zone_spread}}
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchExpressions:
            - key: "app"
              operator: In
              values:
              - "{{ template "pulsar.name" . }}"
            - key: "release"
              operator: In
              values:
              - {{ .Release.Name }}
            - key: "component"
              operator: In
              values:
              - {{ .Values.bookkeeper.component }}
        {{- end }}
      affinity:
        {{- if and .Values.affinity.anti_affinity .Values.bookkeeper.affinity.anti_affinity}}
        podAntiAffinity:
          {{ if eq .Values.bookkeeper.affinity.type "requiredDuringSchedulingIgnoredDuringExecution"}}
          {{ .Values.bookkeeper.affinity.type }}:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - "{{ template "pulsar.name" . }}"
              - key: "release"
                operator: In
                values:
                - {{ .Release.Name }}
              - key: "component"
                operator: In
                values:
                - {{ .Values.bookkeeper.component }}
            topologyKey: "kubernetes.io/hostname"
        {{ else }}
          {{ .Values.bookkeeper.affinity.type }}:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - "{{ template "pulsar.name" . }}"
                    - key: "release"
                      operator: In
                      values:
                      - {{ .Release.Name }}
                    - key: "component"
                      operator: In
                      values:
                      - {{ .Values.bookkeeper.component }}
                topologyKey: "kubernetes.io/hostname"
        {{ end }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.bookkeeper.gracePeriod }}
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      serviceAccountName: "{{ .Values.bookkeeper.service_account.name }}"
      {{ end }}
      {{ else }}
      serviceAccountName: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
      {{ end }}
      initContainers:
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      ## sia init container
      - name: init-sia
        image: "{{ .Values.images.sia.repository }}/{{ .Values.images.sia.tag }}"
        imagePullPolicy: {{ .Values.images.sia.pullPolicy }}
        command: ['sh', '-c', "while :; do /usr/sbin/siad -regionalsts -cmd post && break; done"]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - NET_RAW
        resources:
          requests:
            memory: 50M
            cpu: 10m
        volumeMounts:
          - name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
            mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
          - name: {{ .Values.auth.authentication.athenz.certs.sia_config.name }}
            mountPath: {{ .Values.auth.authentication.athenz.certs.sia_config.path }}
            subPath: {{ .Values.auth.authentication.athenz.certs.sia_config.sub_path }}
      {{ end }}
      {{ end }}
      # This initContainer will wait for bookkeeper initnewcluster to complete
      # before deploying the bookies
      - name: pulsar-bookkeeper-verify-clusterid
        image: "{{ .Values.images.bookie.repository }}:{{ .Values.images.bookie.tag }}"
        imagePullPolicy: {{ .Values.images.bookie.pullPolicy }}
        command: ["sh", "-c"]
        args:
        # only reformat bookie if bookkeeper is running without persistence
        - >
          {{- include "pulsar.bookkeeper.init.verify_cluster_id" . | nindent 10 }}
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - NET_RAW
        {{- if and .Values.rbac.enabled .Values.rbac.psp }}
          readOnlyRootFilesystem: false
        {{- end}}
        volumeMounts:
        {{- include "pulsar.bookkeeper.certs.volumeMounts" . | nindent 8 }}
      containers:
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      - name: sia
        image: "{{ .Values.images.sia.repository }}/{{ .Values.images.sia.tag }}"
        imagePullPolicy: {{ .Values.images.sia.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - NET_RAW
        resources:
          requests:
            memory: 50M
            cpu: 10m
        volumeMounts:
          - mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
            name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
          - mountPath: {{ .Values.auth.authentication.athenz.certs.tls_certs.path }}
            name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
          - name: {{ .Values.auth.authentication.athenz.certs.sia_config.name }}
            mountPath: {{ .Values.auth.authentication.athenz.certs.sia_config.path }}
            subPath: {{ .Values.auth.authentication.athenz.certs.sia_config.sub_path }}
      {{ end }}
      {{ end }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        image: "{{ .Values.images.bookie.repository }}:{{ .Values.images.bookie.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - NET_RAW
        imagePullPolicy: {{ .Values.images.bookie.pullPolicy }}
        {{- if .Values.bookkeeper.probe.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /api/v1/bookie/state
            port: {{ .Values.bookkeeper.ports.http }}
          initialDelaySeconds: {{ .Values.bookkeeper.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.bookkeeper.probe.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.bookkeeper.probe.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.bookkeeper.probe.liveness.failureThreshold }}
        {{- end }}
        {{- if .Values.bookkeeper.probe.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /api/v1/bookie/is_ready
            port: {{ .Values.bookkeeper.ports.http }}
          initialDelaySeconds: {{ .Values.bookkeeper.probe.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.bookkeeper.probe.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.bookkeeper.probe.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.bookkeeper.probe.readiness.failureThreshold }}
        {{- end }}
        {{- if .Values.bookkeeper.probe.startup.enabled }}
        startupProbe:
          httpGet:
            path: /api/v1/bookie/is_ready
            port: {{ .Values.bookkeeper.ports.http }}
          initialDelaySeconds: {{ .Values.bookkeeper.probe.startup.initialDelaySeconds }}
          periodSeconds: {{ .Values.bookkeeper.probe.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.bookkeeper.probe.startup.timeoutSeconds }}
          failureThreshold: {{ .Values.bookkeeper.probe.startup.failureThreshold }}
        {{- end }}
      {{- if .Values.bookkeeper.resources }}
        resources:
{{ toYaml .Values.bookkeeper.resources | indent 10 }}
      {{- end }}
        command: ["sh", "-c"]
        args:
        - >
        {{- if .Values.bookkeeper.additionalCommand }}
          {{ .Values.bookkeeper.additionalCommand }}
        {{- end }}
          bin/apply-config-from-env.py conf/bookkeeper.conf;
        {{- if .Values.bookkeeper.configData.dynamicConfig }} 
          bin/apply-config-from-values.py "{{ .Values.bookkeeper.configData.dynamicConfig | quote}}" conf/bookkeeper.conf;
        {{- end }}
          cat conf/bookkeeper.conf; crond;
          {{- include "pulsar.bookkeeper.zookeeper.tls.settings" . | nindent 10 }}
          {{ if .Values.bookkeeper.healthCheck.enabled }}
          echo "*/5 * * * *" /pulsar/bin/bookkeeper-healthcheck.sh | crontab -;
          echo "uvicorn healthcheck-metrics:app --host 0.0.0.0 --port {{ .Values.bookkeeper.ports.healthcheck }} --app-dir=/pulsar/bin &" >> /pulsar/bin/healthcheck-startup.sh;
          bash /pulsar/bin/healthcheck-startup.sh;
          echo "health-check service started";
          {{ end }}
          OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar bookie;
      {{- if and .Values.rbac.enabled .Values.rbac.psp }}
        securityContext:
          readOnlyRootFilesystem: false
      {{- end}}
        ports:
        - name: "{{ .Values.tcpPrefix }}bookie"
          containerPort: {{ .Values.bookkeeper.ports.bookie }}
        - name: health
          containerPort: {{ .Values.bookkeeper.ports.healthcheck }}
        - name: http
          containerPort: {{ .Values.bookkeeper.ports.http }}
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
        volumeMounts:
        - mountPath: /pulsar/logs
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.logs.name }}"
        {{- if .Values.bookkeeper.volumes.useSingleCommonVolume }}
          - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.common.name }}"
            mountPath: /pulsar/data/bookkeeper
        {{- else }}
          {{- if .Values.bookkeeper.volumes.journal.useMultiVolumes }}
            {{- $fullname := include "pulsar.fullname" . -}}
            {{- $bkComponent := .Values.bookkeeper.component -}}
            {{ range .Values.bookkeeper.volumes.journal.multiVolumes }}
        - name: "{{ $fullname }}-{{ $bkComponent }}-{{ .name }}"
          mountPath: {{ .mountPath }}
            {{- end }}
          {{- else }}
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.journal.name }}"
          mountPath: /pulsar/data/bookkeeper/journal
          {{- end}}
          {{- if .Values.bookkeeper.volumes.ledgers.useMultiVolumes }}
            {{- $fullname := include "pulsar.fullname" . -}}
            {{- $bkComponent := .Values.bookkeeper.component -}}
            {{ range .Values.bookkeeper.volumes.ledgers.multiVolumes }}
        - name: "{{ $fullname }}-{{ $bkComponent }}-{{ .name }}"
          mountPath: {{ .mountPath }}
            {{- end }}
          {{- else }}
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.ledgers.name }}"
          mountPath: /pulsar/data/bookkeeper/ledgers
          {{- end }}
        {{- end }}
        {{ if .Values.bookkeeper.healthCheck.enabled }}
        - mountPath: /metrics-data
          name: metrics-volume
        {{ end }}
        {{- if .Values.bookkeeper.extraVolumeMounts }}
{{ toYaml .Values.bookkeeper.extraVolumeMounts | indent 8 }}
        {{- end }}
        {{- include "pulsar.bookkeeper.certs.volumeMounts" . | nindent 8 }}
        {{- if .Values.auth.authentication.enabled }}
        {{- if eq .Values.auth.authentication.provider "athenz" }}
        - mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
          name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
        {{- end }}
        {{- end }}
      volumes:
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      - name: sia-volume
        emptyDir:
          medium: {{ .Values.auth.authentication.athenz.certs.sia_volume.medium }}
      - name: sia
        configMap:
          name: "{{ .Values.bookkeeper.service_account.configmap }}"
          items:
            - key: {{ .Values.auth.authentication.athenz.certs.sia_config.key.name }}
              path: {{ .Values.auth.authentication.athenz.certs.sia_config.key.path }}
      {{ end }}
      {{ end }}
      {{- if not (and (and .Values.persistence .Values.volumes.persistence) .Values.bookkeeper.volumes.persistence) }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.journal.name }}"
        emptyDir: {}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.ledgers.name }}"
        emptyDir: {}
      {{- end }}
      {{- include "pulsar.bookkeeper.certs.volumes" . | nindent 6 }}
      {{- include "pulsar.imagePullSecrets" . | nindent 6}}
      {{ if .Values.bookkeeper.healthCheck.enabled }}
      - name: metrics-volume
        emptyDir: {}
      {{ end }}
      {{- if .Values.bookkeeper.extraVolumes }}
{{ toYaml .Values.bookkeeper.extraVolumes | indent 6 }}
      {{- end }}
{{- if and (and .Values.persistence .Values.volumes.persistence) .Values.bookkeeper.volumes.persistence}}
  volumeClaimTemplates:
  - metadata:
      name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.logs.name }}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.bookkeeper.volumes.logs.size }}
    {{- if .Values.bookkeeper.volumes.logs.storageClassName }}
      storageClassName: "{{ .Values.bookkeeper.volumes.logs.storageClassName }}"
    {{- else if and (not (and .Values.volumes.local_storage .Values.bookkeeper.volumes.logs.local_storage)) .Values.bookkeeper.volumes.logs.storageClass }}
      storageClassName: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.logs.name }}"
    {{- else if and .Values.volumes.local_storage .Values.bookkeeper.volumes.logs.local_storage }}
      storageClassName: "local-storage"
    {{- end }}
  {{- if .Values.bookkeeper.volumes.useSingleCommonVolume }}
    - metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.common.name }}"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.bookkeeper.volumes.common.size }}
        {{- if .Values.bookkeeper.volumes.common.storageClassName }}
        storageClassName: "{{ .Values.bookkeeper.volumes.common.storageClassName }}"
        {{- else if and (not (and .Values.volumes.local_storage .Values.bookkeeper.volumes.common.local_storage)) .Values.bookkeeper.volumes.common.storageClass }}
        storageClassName: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.common.name }}"
        {{- else if and .Values.volumes.local_storage .Values.bookkeeper.volumes.common.local_storage }}
        storageClassName: "local-storage"
        {{- end }}
  {{- else }}
  {{- if .Values.bookkeeper.volumes.journal.useMultiVolumes }}
  {{- $fullname := include "pulsar.fullname" . -}}
  {{- $bkComponent := .Values.bookkeeper.component -}}
  {{ range .Values.bookkeeper.volumes.journal.multiVolumes }}
  - metadata:
      name: "{{ $fullname }}-{{ $bkComponent }}-{{ .name }}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .size }}
    {{- if .storageClassName }}
      storageClassName: "{{ .storageClassName }}"
    {{- end }}
  {{- end }}
  {{- else }}
  - metadata:
      name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.journal.name }}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.bookkeeper.volumes.journal.size }}
    {{- if .Values.bookkeeper.volumes.journal.storageClassName }}
      storageClassName: "{{ .Values.bookkeeper.volumes.journal.storageClassName }}"
    {{- else if and (not (and .Values.volumes.local_storage .Values.bookkeeper.volumes.journal.local_storage)) .Values.bookkeeper.volumes.journal.storageClass }}
      storageClassName: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.journal.name }}"
    {{- else if and .Values.volumes.local_storage .Values.bookkeeper.volumes.journal.local_storage }}
      storageClassName: "local-storage"
    {{- end }}
  {{- end }}
  {{- if .Values.bookkeeper.volumes.ledgers.useMultiVolumes }}
  {{- $fullname := include "pulsar.fullname" . -}}
  {{- $bkComponent := .Values.bookkeeper.component -}}
  {{ range .Values.bookkeeper.volumes.ledgers.multiVolumes }}
  - metadata:
      name: "{{ $fullname }}-{{ $bkComponent }}-{{ .name }}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .size }}
    {{- if .storageClassName }}
      storageClassName: "{{ .storageClassName }}"
    {{- end }}
    {{- end }}
  {{- else }}
  - metadata:
      name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.ledgers.name }}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.bookkeeper.volumes.ledgers.size }}
    {{- if .Values.bookkeeper.volumes.ledgers.storageClassName }}
      storageClassName: "{{ .Values.bookkeeper.volumes.ledgers.storageClassName }}"
    {{- else if and (not (and .Values.volumes.local_storage .Values.bookkeeper.volumes.ledgers.local_storage)) .Values.bookkeeper.volumes.ledgers.storageClass }}
      storageClassName: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.ledgers.name }}"
    {{- else if and .Values.volumes.local_storage .Values.bookkeeper.volumes.ledgers.local_storage }}
      storageClassName: "local-storage"
    {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
{{- end }}
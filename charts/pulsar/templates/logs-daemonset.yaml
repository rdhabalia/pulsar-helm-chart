{{- if .Values.components.logs }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.logs.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
{{ toYaml .Values.logs.customLabels | indent 4 }}
    component: {{ .Values.logs.component }}
spec:
  selector:
    matchLabels:
      component: {{ .Values.logs.component }}
  updateStrategy:
{{ toYaml .Values.logs.updateStrategy | indent 4 }}
  template:
    metadata:
      labels:
        {{- include "pulsar.standardLabels" . | nindent 8 }}
{{ toYaml .Values.logs.customLabels | indent 8 }}
        component: {{ .Values.logs.component }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
    {{- if .Values.logs.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.logs.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.logs.tolerations }}
      tolerations:
{{ toYaml .Values.logs.tolerations | indent 8 }}
    {{- end }}
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      serviceAccountName: "{{ .Values.logs.service_account.name }}"
      {{ end }}
      {{ else }}
      serviceAccountName: "{{ template "pulsar.fullname" . }}-{{ .Values.logs.component }}-acct"
      {{ end }}
      dnsPolicy: {{ .Values.logs.dnsPolicy }}
      hostNetwork: {{ .Values.logs.hostNetwork }}
      initContainers:
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      ## sia init container
      - name: init-sia
        image: "{{ .Values.images.sia.repository }}/{{ .Values.images.sia.tag }}"
        imagePullPolicy: {{ .Values.images.sia.pullPolicy }}
        command: ['sh', '-c', "while :; do /usr/sbin/siad -regionalsts -cmd post && break; done"]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - NET_RAW
        resources:
          requests:
            memory: 50M
            cpu: 10m
        volumeMounts:
          - name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
            mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
          - name: {{ .Values.auth.authentication.athenz.certs.sia_config.name }}
            mountPath: {{ .Values.auth.authentication.athenz.certs.sia_config.path }}
            subPath: {{ .Values.auth.authentication.athenz.certs.sia_config.sub_path }}
      ## cameo init container
      - name: init-cameo
        image: "{{ .Values.images.cameo.repository }}/{{ .Values.images.cameo.tag }}"
        imagePullPolicy: {{ .Values.images.cameo.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - NET_RAW
        env:
          - name: ATHENZ_SERVICE_CERT_PATH
            value: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}/certs/{{ .Values.auth.authentication.athenz.certs.domain }}.{{ .Values.logs.service_account.name }}.cert.pem
          - name: ATHENZ_SERVICE_KEY_PATH
            value: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}/keys/{{ .Values.auth.authentication.athenz.certs.domain }}.{{ .Values.logs.service_account.name }}.key.pem
          - name: CERT_GROUP
            value: {{ .Values.auth.authentication.athenz.certs.cameo.cert.group }}
          - name: CERT_KEY
            value: {{ .Values.auth.authentication.athenz.certs.cameo.cert.key }}
          - name: PRIVATEKEY_KEY
            value: {{ .Values.auth.authentication.athenz.certs.cameo.cert.private_key }}
          - name: INIT_RUN
            value: "true"
        resources:
          requests:
            memory: "128M"
            cpu: "250m"
          limits:
            memory: "150M"
            cpu: "500m"
        volumeMounts:
          - mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
            name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
          - mountPath: {{ .Values.auth.authentication.athenz.certs.tls_certs.path }}
            name: {{ .Values.auth.authentication.athenz.certs.tls_certs.name }}
      {{ end }}
      {{ end }}
      containers:
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      - name: sia
        image: "{{ .Values.images.sia.repository }}/{{ .Values.images.sia.tag }}"
        imagePullPolicy: {{ .Values.images.sia.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - NET_RAW
        resources:
          requests:
            memory: 50M
            cpu: 10m
        volumeMounts:
          - mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
            name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
          - mountPath: {{ .Values.auth.authentication.athenz.certs.tls_certs.path }}
            name: {{ .Values.auth.authentication.athenz.certs.tls_certs.name }}
          - name: {{ .Values.auth.authentication.athenz.certs.sia_config.name }}
            mountPath: {{ .Values.auth.authentication.athenz.certs.sia_config.path }}
            subPath: {{ .Values.auth.authentication.athenz.certs.sia_config.sub_path }}
      - name: cameo
        image: "{{ .Values.images.cameo.repository }}/{{ .Values.images.cameo.tag }}"
        imagePullPolicy: {{ .Values.images.cameo.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - NET_RAW
        env:
          - name: ATHENZ_SERVICE_CERT_PATH
            value: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}/certs/{{ .Values.auth.authentication.athenz.certs.domain }}.{{ .Values.logs.service_account.name }}.cert.pem
          - name: ATHENZ_SERVICE_KEY_PATH
            value: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}/keys/{{ .Values.auth.authentication.athenz.certs.domain }}.{{ .Values.logs.service_account.name }}.key.pem
          - name: CERT_GROUP
            value: {{ .Values.auth.authentication.athenz.certs.cameo.cert.group }}
          - name: CERT_KEY
            value: {{ .Values.auth.authentication.athenz.certs.cameo.cert.key }}
          - name: PRIVATEKEY_KEY
            value: {{ .Values.auth.authentication.athenz.certs.cameo.cert.private_key }}
        resources:
          requests:
            memory: "50M"
            cpu: "50m"
          limits:
            memory: "150M"
            cpu: "250m"
        volumeMounts:
          - mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
            name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
          - mountPath: {{ .Values.auth.authentication.athenz.certs.tls_certs.path }}
            name: {{ .Values.auth.authentication.athenz.certs.tls_certs.name }}
      {{ end }}
      {{ end }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.logs.component }}"
        image: "{{ .Values.images.logs.repository }}/{{ .Values.images.logs.tag }}"
        imagePullPolicy: {{ .Values.images.logs.pullPolicy }}
        env:
          - name: HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
      {{- if .Values.logs.resources }}
        resources:
{{ toYaml .Values.logs.resources | indent 10 }}
      {{- end }}
      {{- if .Values.logs.volumeMounts }}
        volumeMounts:
{{ toYaml .Values.logs.volumeMounts | indent 10 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
    {{- if .Values.logs.volumes }}
      volumes:
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      - name: tls-certs
        emptyDir:
          medium: {{ .Values.auth.authentication.athenz.certs.tls_certs.medium }}
      - name: sia-volume
        emptyDir:
          medium: {{ .Values.auth.authentication.athenz.certs.sia_volume.medium }}
      - name: sia
        configMap:
          name: "{{ .Values.logs.service_account.configmap }}"
          items:
            - key: {{ .Values.auth.authentication.athenz.certs.sia_config.key.name }}
              path: {{ .Values.auth.authentication.athenz.certs.sia_config.key.path }}
      {{ end }}
      {{ end }}
{{ toYaml .Values.logs.volumes | indent 6 }}
    {{- end }}
{{- end }}
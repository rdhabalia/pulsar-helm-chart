#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if or .Values.components.pulsar_manager .Values.extra.pulsar_manager }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.pulsar_manager.component }}
spec:
  replicas: {{ .Values.pulsar_manager.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.pulsar_manager.component }}
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.pulsar_manager.component }}
      annotations:
        {{- if .Values.pulsar_manager.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/pulsar-manager-configmap.yaml") . | sha256sum }}
        {{- end }}
{{- with .Values.pulsar_manager.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.pulsar_manager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.pulsar_manager.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.pulsar_manager.tolerations }}
      tolerations:
{{ toYaml .Values.pulsar_manager.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.pulsar_manager.gracePeriod }}
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
      serviceAccountName: "{{ .Values.pulsar_manager.service_account.name }}"
      {{ end }}
      {{ end }}
      initContainers:
      {{ if .Values.auth.authentication.enabled }}
      {{ if eq .Values.auth.authentication.provider "athenz" }}
        ## sia init container
        - name: init-sia
          image: "{{ .Values.images.sia.repository }}/{{ .Values.images.sia.tag }}"
          imagePullPolicy: {{ .Values.images.sia.pullPolicy }}
          command: ['sh', '-c', "while :; do /usr/sbin/siad -regionalsts -cmd post && break; done"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - NET_RAW
          resources:
            requests:
              memory: 50M
              cpu: 10m
          volumeMounts:
            - name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
              mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
            - name: {{ .Values.auth.authentication.athenz.certs.sia_config.name }}
              mountPath: {{ .Values.auth.authentication.athenz.certs.sia_config.path }}
              subPath: {{ .Values.auth.authentication.athenz.certs.sia_config.sub_path }}
      {{ end }}
      {{ end }}
      containers:
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
          image: "{{ .Values.images.pulsar_manager.repository }}:{{ .Values.images.pulsar_manager.tag }}"
          imagePullPolicy: {{ .Values.images.pulsar_manager.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
               - NET_RAW
        {{- if .Values.pulsar_manager.resources }}
          resources:
{{ toYaml .Values.pulsar_manager.resources | indent 12 }}
        {{- end }}
          ports:
          - containerPort: {{ .Values.pulsar_manager.service.targetPort }}
          volumeMounts:
          - name: pulsar-manager-data
            mountPath: /data
          {{- if .Values.auth.authentication.enabled }}
            {{ if eq .Values.auth.authentication.provider "athenz" }}
          - mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
            name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
            {{ end }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
          env:
          - name: PULSAR_CLUSTER
            value: {{ template "pulsar.fullname" . }}
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                key: PULSAR_MANAGER_ADMIN_USER
                {{- if .Values.pulsar_manager.existingSecretName }}
                name: "{{ .Values.pulsar_manager.existingSecretName }}"
                {{- else }}
                name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}-secret"
                {{- end }}
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                key: PULSAR_MANAGER_ADMIN_PASSWORD
                {{- if .Values.pulsar_manager.existingSecretName }}
                name: "{{ .Values.pulsar_manager.existingSecretName }}"
                {{- else }}
                name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}-secret"
                {{- end }}
          - name: PULSAR_MANAGER_OPTS
            value: "$(PULSAR_MANAGER_OPTS) -Dlog4j2.formatMsgNoLookups=true"
        {{- include "pulsar.imagePullSecrets" . | nindent 6}}
        {{ if .Values.auth.authentication.enabled }}
        {{ if eq .Values.auth.authentication.provider "athenz" }}
        - name: sia
          image: "{{ .Values.images.sia.repository }}/{{ .Values.images.sia.tag }}"
          imagePullPolicy: {{ .Values.images.sia.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - NET_RAW
          resources:
            requests:
              memory: 50M
              cpu: 10m
          volumeMounts:
            - mountPath: {{ .Values.auth.authentication.athenz.certs.sia_volume.path }}
              name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
            - mountPath: {{ .Values.auth.authentication.athenz.certs.tls_certs.path }}
              name: {{ .Values.auth.authentication.athenz.certs.sia_volume.name }}
            - name: {{ .Values.auth.authentication.athenz.certs.sia_config.name }}
              mountPath: {{ .Values.auth.authentication.athenz.certs.sia_config.path }}
              subPath: {{ .Values.auth.authentication.athenz.certs.sia_config.sub_path }}
          {{ end }}
          {{ end }}
      volumes:
        - name: pulsar-manager-data
          emptyDir: {}
        {{ if .Values.auth.authentication.enabled }}
        {{ if eq .Values.auth.authentication.provider "athenz" }}
        - name: sia-volume
          emptyDir:
            medium: {{ .Values.auth.authentication.athenz.certs.sia_volume.medium }}
        - name: sia
          configMap:
            name: "{{ .Values.pulsar_manager.service_account.configmap }}"
            items:
              - key: {{ .Values.auth.authentication.athenz.certs.sia_config.key.name }}
                path: {{ .Values.auth.authentication.athenz.certs.sia_config.key.path }}
        {{ end }}
        {{ end }}
{{- end }}
